generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}

model User {
  id           Int       @id @default(autoincrement())
  fullName     String
  email        String    @unique
  phone        String?
  passwordHash String
  kycStatus    String    @default("unverified")
  role         Role      @default(USER)
  createdAt    DateTime  @default(now())

  items        Item[]
  reports      ItemReport[]
  reviews      ItemReview[] @relation("AdminReviews")
}

model Item {
  id              String     @id @default(uuid()) @db.Uuid
  userId          Int
  title           String
  description     String
  category        String
  condition       String?
  status          String     @default("pending") // pending|under_review|approved|rejected|suspended
  reviewReason    String?
  phone           String?
  address         String?
  state           String?
  lga             String?
  desiredSwap     String?
  estimatedValue  Int        @default(0)
  cashBalance     Int        @default(0)
  imagePaths      String[]   // maps to Postgres text[]
  videoPath       String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  user            User       @relation(fields: [userId], references: [id])
  reviews         ItemReview[]
  reports         ItemReport[]
}

model ItemReview {
  id         Int      @id @default(autoincrement())
  itemId     String   @db.Uuid
  adminId    Int
  action     String   // approve|reject|suspend|escalate
  reason     String?
  reviewedAt DateTime @default(now())

  item       Item     @relation(fields: [itemId], references: [id])
  admin      User     @relation("AdminReviews", fields: [adminId], references: [id])
}

model ItemReport {
  id         Int      @id @default(autoincrement())
  itemId     String   @db.Uuid
  reporterId Int
  reason     String
  status     String   @default("open")
  reportedAt DateTime @default(now())

  item       Item     @relation(fields: [itemId], references: [id])
  reporter   User     @relation(fields: [reporterId], references: [id])
}
